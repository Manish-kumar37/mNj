# Initialize the board
board = [' ' for _ in range(9)]

# Define the player symbols
player_symbols = ['X', 'O']

# Function to print the board
def print_board():
    for i in range(3):
        print(' ' + board[i * 3] + ' | ' + board[i * 3 + 1] + ' | ' + board[i * 3 + 2])
        if i < 2:
            print('-----------')

# Function to check if a player has won
def check_win(player):
    # Check rows
    for i in range(0, 9, 3):
        if board[i] == board[i + 1] == board[i + 2] == player:
            return True

    # Check columns
    for i in range(3):
        if board[i] == board[i + 3] == board[i + 6] == player:
            return True

    # Check diagonals
    if board[0] == board[4] == board[8] == player:
        return True
    if board[2] == board[4] == board[6] == player:
        return True

    return False

def check_draw():
    return ' ' not in board

# Function to get a valid move from the player
def get_move(player_symbol):
    while True:
        move = input(f"Player {player_symbol}, enter your move (1-9): ")
        if move.isdigit() and int(move) in range(1, 10) and board[int(move) - 1] == ' ':
            board[int(move) - 1] = player_symbol
            break
        else:
            print("Invalid move. Try again.")

# Main game loop
current_player = 0
while True:
    print_board()
    get_move(player_symbols[current_player])

    if check_win(player_symbols[current_player]):
        print_board()
        print(f"Player {player_symbols[current_player]} wins!")
        break

    if check_draw():
        print_board()
        print("It's a draw!")
        break

    current_player = (current_player + 1) % 2
